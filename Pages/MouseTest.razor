@page "/onmouse"
@using System.Numerics
@inject HttpClient Http

@if (_nodes == null)
{
    <div>loading</div>
}
else
{
    <div class="relative w-full h-full overflow-hidden" @onmouseup="OnMouseUp" @onmousemove="OnMouseMove">
        @foreach (var node in _nodes)
        {
            <div class="absolute px-2 py-1 bg-zinc-200 rounded-md ring-1 ring-gray-900/10" style="
            left: @(node.X)px;
            top: @(node.Y)px;
            width: @(node.Width)px;
            height: @(node.Height)px" @onmousedown="@(e=>OnMouseDown(e, node))">
                @node.Contents
            </div>
        }
    </div>
}

@code {
    private List<Node>? _nodes;
    private Node? _node = null;
    private Vector2 _offset = Vector2.Zero;

    protected override void OnInitialized()
    {
        _nodes = Enumerable.Range(1, 10).Select(i => new Node
        {
            X = i * 20,
            Y = i * 30,
            Contents = $"Henlo {i}",
        }).ToList();
    }

    void OnMouseDown(MouseEventArgs e, Node node)
    {
        _node = node;
        _offset = new Vector2((float)(node.X - e.ClientX), (float)(node.Y - e.ClientY));
    }

    void OnMouseUp(MouseEventArgs e)
    {
        _node = null;
    }

    void OnMouseMove(MouseEventArgs e)
    {
        if (_node == null)
            return;

        _node.X = e.ClientX + _offset.X;
        _node.Y = e.ClientY + _offset.Y;
    }

    record Node
    {
        public double X { get; set; } = 0;
        public double Y { get; set; } = 0;
        public double Width { get; set; } = 140;
        public double Height { get; set; } = 80;

        public string Contents = "henlo :3";
    }
}
